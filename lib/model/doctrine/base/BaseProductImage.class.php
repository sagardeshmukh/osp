<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ProductImage', 'yozoa');

/**
 * BaseProductImage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $folder
 * @property string $filename
 * @property integer $sort_order
 * @property integer $product_id
 * @property Product $Product
 * 
 * @method integer      getId()         Returns the current record's "id" value
 * @method string       getFolder()     Returns the current record's "folder" value
 * @method string       getFilename()   Returns the current record's "filename" value
 * @method integer      getSortOrder()  Returns the current record's "sort_order" value
 * @method integer      getProductId()  Returns the current record's "product_id" value
 * @method Product      getProduct()    Returns the current record's "Product" value
 * @method ProductImage setId()         Sets the current record's "id" value
 * @method ProductImage setFolder()     Sets the current record's "folder" value
 * @method ProductImage setFilename()   Sets the current record's "filename" value
 * @method ProductImage setSortOrder()  Sets the current record's "sort_order" value
 * @method ProductImage setProductId()  Sets the current record's "product_id" value
 * @method ProductImage setProduct()    Sets the current record's "Product" value
 * 
 * @package    symfony
 * @subpackage model
 * @author     Sagar S. Deshmukh
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductImage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product_image');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('folder', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('filename', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('sort_order', 'integer', 1, array(
             'type' => 'integer',
             'default' => 0,
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('product_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Product', array(
             'local' => 'product_id',
             'foreign' => 'id'));
    }
}