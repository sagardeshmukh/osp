<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ProductAttributeValue', 'yozoa');

/**
 * BaseProductAttributeValue
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $product_attribute_id
 * @property integer $attribute_value_id
 * @property ProductAttribute $ProductAttribute
 * @property AttributeValues $AttributeValues
 * 
 * @method integer               getProductAttributeId()   Returns the current record's "product_attribute_id" value
 * @method integer               getAttributeValueId()     Returns the current record's "attribute_value_id" value
 * @method ProductAttribute      getProductAttribute()     Returns the current record's "ProductAttribute" value
 * @method AttributeValues       getAttributeValues()      Returns the current record's "AttributeValues" value
 * @method ProductAttributeValue setProductAttributeId()   Sets the current record's "product_attribute_id" value
 * @method ProductAttributeValue setAttributeValueId()     Sets the current record's "attribute_value_id" value
 * @method ProductAttributeValue setProductAttribute()     Sets the current record's "ProductAttribute" value
 * @method ProductAttributeValue setAttributeValues()      Sets the current record's "AttributeValues" value
 * 
 * @package    symfony
 * @subpackage model
 * @author     Sagar S. Deshmukh
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductAttributeValue extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product_attribute_value');
        $this->hasColumn('product_attribute_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('attribute_value_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProductAttribute', array(
             'local' => 'product_attribute_id',
             'foreign' => 'id'));

        $this->hasOne('AttributeValues', array(
             'local' => 'attribute_value_id',
             'foreign' => 'id'));
    }
}