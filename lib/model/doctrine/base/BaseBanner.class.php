<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Banner', 'yozoa');

/**
 * BaseBanner
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $type
 * @property integer $width
 * @property integer $height
 * @property timestamp $begin_date
 * @property timestamp $end_date
 * @property string $file
 * @property string $link
 * @property integer $nb_views
 * @property integer $category_id
 * @property integer $is_recursive
 * @property integer $user_id
 * @property integer $is_active
 * @property string $code
 * 
 * @method integer   getId()           Returns the current record's "id" value
 * @method string    getName()         Returns the current record's "name" value
 * @method string    getType()         Returns the current record's "type" value
 * @method integer   getWidth()        Returns the current record's "width" value
 * @method integer   getHeight()       Returns the current record's "height" value
 * @method timestamp getBeginDate()    Returns the current record's "begin_date" value
 * @method timestamp getEndDate()      Returns the current record's "end_date" value
 * @method string    getFile()         Returns the current record's "file" value
 * @method string    getLink()         Returns the current record's "link" value
 * @method integer   getNbViews()      Returns the current record's "nb_views" value
 * @method integer   getCategoryId()   Returns the current record's "category_id" value
 * @method integer   getIsRecursive()  Returns the current record's "is_recursive" value
 * @method integer   getUserId()       Returns the current record's "user_id" value
 * @method integer   getIsActive()     Returns the current record's "is_active" value
 * @method string    getCode()         Returns the current record's "code" value
 * @method Banner    setId()           Sets the current record's "id" value
 * @method Banner    setName()         Sets the current record's "name" value
 * @method Banner    setType()         Sets the current record's "type" value
 * @method Banner    setWidth()        Sets the current record's "width" value
 * @method Banner    setHeight()       Sets the current record's "height" value
 * @method Banner    setBeginDate()    Sets the current record's "begin_date" value
 * @method Banner    setEndDate()      Sets the current record's "end_date" value
 * @method Banner    setFile()         Sets the current record's "file" value
 * @method Banner    setLink()         Sets the current record's "link" value
 * @method Banner    setNbViews()      Sets the current record's "nb_views" value
 * @method Banner    setCategoryId()   Sets the current record's "category_id" value
 * @method Banner    setIsRecursive()  Sets the current record's "is_recursive" value
 * @method Banner    setUserId()       Sets the current record's "user_id" value
 * @method Banner    setIsActive()     Sets the current record's "is_active" value
 * @method Banner    setCode()         Sets the current record's "code" value
 * 
 * @package    symfony
 * @subpackage model
 * @author     Sagar S. Deshmukh
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBanner extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('banner');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('type', 'string', 5, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 5,
             ));
        $this->hasColumn('width', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('height', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('begin_date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'notnull' => true,
             'length' => 25,
             ));
        $this->hasColumn('end_date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'notnull' => true,
             'length' => 25,
             ));
        $this->hasColumn('file', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('link', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('nb_views', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('is_recursive', 'integer', null, array(
             'type' => 'integer',
             'default' => 1,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('is_active', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('code', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}