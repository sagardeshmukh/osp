<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Product', 'yozoa');

/**
 * BaseProduct
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $description
 * @property string $image
 * @property integer $category_id
 * @property boolean $is_new
 * @property integer $status
 * @property integer $user_id
 * @property string $currency_main
 * @property float $price_original
 * @property float $price_global
 * @property string $attribute_value_ids
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property timestamp $confirmed_at
 * @property integer $duration
 * @property boolean $buy_online
 * @property boolean $internal
 * @property boolean $delivery_status
 * @property boolean $delivery_type
 * @property string $phone_cell
 * @property string $phone_home
 * @property string $surname
 * @property integer $x_area_id
 * @property integer $x_area_location_id
 * @property Category $Category
 * @property XArea $XArea
 * @property XAreaLocation $XAreaLocation
 * @property Doctrine_Collection $ProductAttribute
 * @property Doctrine_Collection $ProductComment
 * @property Doctrine_Collection $ProductImage
 * @property Doctrine_Collection $ProductStat
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method string              getName()                Returns the current record's "name" value
 * @method string              getDescription()         Returns the current record's "description" value
 * @method string              getImage()               Returns the current record's "image" value
 * @method integer             getCategoryId()          Returns the current record's "category_id" value
 * @method boolean             getIsNew()               Returns the current record's "is_new" value
 * @method integer             getStatus()              Returns the current record's "status" value
 * @method integer             getUserId()              Returns the current record's "user_id" value
 * @method string              getCurrencyMain()        Returns the current record's "currency_main" value
 * @method float               getPriceOriginal()       Returns the current record's "price_original" value
 * @method float               getPriceGlobal()         Returns the current record's "price_global" value
 * @method string              getAttributeValueIds()   Returns the current record's "attribute_value_ids" value
 * @method timestamp           getCreatedAt()           Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()           Returns the current record's "updated_at" value
 * @method timestamp           getConfirmedAt()         Returns the current record's "confirmed_at" value
 * @method integer             getDuration()            Returns the current record's "duration" value
 * @method boolean             getBuyOnline()           Returns the current record's "buy_online" value
 * @method boolean             getInternal()            Returns the current record's "internal" value
 * @method boolean             getDeliveryStatus()      Returns the current record's "delivery_status" value
 * @method boolean             getDeliveryType()        Returns the current record's "delivery_type" value
 * @method string              getPhoneCell()           Returns the current record's "phone_cell" value
 * @method string              getPhoneHome()           Returns the current record's "phone_home" value
 * @method string              getSurname()             Returns the current record's "surname" value
 * @method integer             getXAreaId()             Returns the current record's "x_area_id" value
 * @method integer             getXAreaLocationId()     Returns the current record's "x_area_location_id" value
 * @method Category            getCategory()            Returns the current record's "Category" value
 * @method XArea               getXArea()               Returns the current record's "XArea" value
 * @method XAreaLocation       getXAreaLocation()       Returns the current record's "XAreaLocation" value
 * @method Doctrine_Collection getProductAttribute()    Returns the current record's "ProductAttribute" collection
 * @method Doctrine_Collection getProductComment()      Returns the current record's "ProductComment" collection
 * @method Doctrine_Collection getProductImage()        Returns the current record's "ProductImage" collection
 * @method Doctrine_Collection getProductStat()         Returns the current record's "ProductStat" collection
 * @method Product             setId()                  Sets the current record's "id" value
 * @method Product             setName()                Sets the current record's "name" value
 * @method Product             setDescription()         Sets the current record's "description" value
 * @method Product             setImage()               Sets the current record's "image" value
 * @method Product             setCategoryId()          Sets the current record's "category_id" value
 * @method Product             setIsNew()               Sets the current record's "is_new" value
 * @method Product             setStatus()              Sets the current record's "status" value
 * @method Product             setUserId()              Sets the current record's "user_id" value
 * @method Product             setCurrencyMain()        Sets the current record's "currency_main" value
 * @method Product             setPriceOriginal()       Sets the current record's "price_original" value
 * @method Product             setPriceGlobal()         Sets the current record's "price_global" value
 * @method Product             setAttributeValueIds()   Sets the current record's "attribute_value_ids" value
 * @method Product             setCreatedAt()           Sets the current record's "created_at" value
 * @method Product             setUpdatedAt()           Sets the current record's "updated_at" value
 * @method Product             setConfirmedAt()         Sets the current record's "confirmed_at" value
 * @method Product             setDuration()            Sets the current record's "duration" value
 * @method Product             setBuyOnline()           Sets the current record's "buy_online" value
 * @method Product             setInternal()            Sets the current record's "internal" value
 * @method Product             setDeliveryStatus()      Sets the current record's "delivery_status" value
 * @method Product             setDeliveryType()        Sets the current record's "delivery_type" value
 * @method Product             setPhoneCell()           Sets the current record's "phone_cell" value
 * @method Product             setPhoneHome()           Sets the current record's "phone_home" value
 * @method Product             setSurname()             Sets the current record's "surname" value
 * @method Product             setXAreaId()             Sets the current record's "x_area_id" value
 * @method Product             setXAreaLocationId()     Sets the current record's "x_area_location_id" value
 * @method Product             setCategory()            Sets the current record's "Category" value
 * @method Product             setXArea()               Sets the current record's "XArea" value
 * @method Product             setXAreaLocation()       Sets the current record's "XAreaLocation" value
 * @method Product             setProductAttribute()    Sets the current record's "ProductAttribute" collection
 * @method Product             setProductComment()      Sets the current record's "ProductComment" collection
 * @method Product             setProductImage()        Sets the current record's "ProductImage" collection
 * @method Product             setProductStat()         Sets the current record's "ProductStat" collection
 * 
 * @package    symfony
 * @subpackage model
 * @author     Sagar S. Deshmukh
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProduct extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '',
             ));
        $this->hasColumn('image', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('is_new', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             'notnull' => true,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'default' => -1,
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('currency_main', 'string', 4, array(
             'type' => 'string',
             'default' => 'USD',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('price_original', 'float', null, array(
             'type' => 'float',
             'default' => 0,
             'notnull' => true,
             'length' => '',
             ));
        $this->hasColumn('price_global', 'float', null, array(
             'type' => 'float',
             'default' => 0,
             'notnull' => true,
             'length' => '',
             ));
        $this->hasColumn('attribute_value_ids', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'length' => 25,
             ));
        $this->hasColumn('confirmed_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'length' => 25,
             ));
        $this->hasColumn('duration', 'integer', null, array(
             'type' => 'integer',
             'default' => 7,
             'notnull' => true,
             ));
        $this->hasColumn('buy_online', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             'notnull' => true,
             ));
        $this->hasColumn('internal', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             'notnull' => true,
             ));
        $this->hasColumn('delivery_status', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             'notnull' => true,
             ));
        $this->hasColumn('delivery_type', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             'notnull' => true,
             ));
        $this->hasColumn('phone_cell', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('phone_home', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('surname', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('x_area_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('x_area_location_id', 'integer', null, array(
             'type' => 'integer',
             ));


        $this->index('content', array(
             'fields' => 
             array(
              0 => 'name',
              1 => 'attribute_value_ids',
             ),
             'type' => 'fulltext',
             ));
        $this->option('type', 'MyISAM');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Category', array(
             'local' => 'category_id',
             'foreign' => 'id'));

        $this->hasOne('XArea', array(
             'local' => 'x_area_id',
             'foreign' => 'id'));

        $this->hasOne('XAreaLocation', array(
             'local' => 'x_area_location_id',
             'foreign' => 'id'));

        $this->hasMany('ProductAttribute', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('ProductComment', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('ProductImage', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('ProductStat', array(
             'local' => 'id',
             'foreign' => 'product_id'));
    }
}